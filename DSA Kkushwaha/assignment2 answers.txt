1.Write a program to print whether a number is even or odd, also.take input from the user.

2.Take name as input and print a greeting message for that.particular name.

3.Write a program to input principal, time, and rate (P, T, R) from the user and find Simple Interest.

4.Take in two numbers and an operator (+, -, *, /) and calculate the value. (Use if conditions)

5.Take 2 numbers as input and print the largest number.

6.Input currency in rupees and output in USD.

7.To calculate Fibonacci Series up to n numbers.

8.To find out whether the given String is Palindrome or not.

9.To find Armstrong Number between two given number
 

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    
}
}       
            /*
	    String s=sc.nextLine();
	    System.out.print("Hello "+s+"! Good to meet you");
	    */
	    
	    /*
	    double p=sc.nextInt();
	    double t=sc.nextInt();
	    double r=sc.nextInt();
	    
	    double si=((p*t*r)/100);
	    System.out.print("simple interest : "+si);
	    */
	    
	    /*
	    int a=sc.nextInt();
	    int b=sc.nextInt();
	    char op=sc.next().charAt(0);
	    double val=calci(a,b,op);
	    System.out.println(val);
        }
	    public static double calci(int a,int b,char op) {
	    if(op=='+'){ return a+b; }
	    else if(op=='-'){ return a-b; }
	    else if(op=='*'){ return a*b; }
	    else if(op=='/') { return a/b; }
	    else { return 0; }
        }
        */
        
        /*
        int a=sc.nextInt();
	    int b=sc.nextInt();
	    if(a>b){  System.out.println(a); }
	    else if(a<b){  System.out.println(b); }
        else {  System.out.println("equal"); }
        */
        
        /*
        double Inr= 0.014;
        int cur=sc.nextInt();
        double val=cur*Inr;
        System.out.println("value"+val);
        */
        
        /*
         int n=sc.nextInt();
        for(int i=0;i<n;i++) {
        System.out.print(fibo(i)+" ");
        }
     	}
        public static int fibo(int n){
            if(n==1 || n==0){
                return n;
            }
            else {
                return fibo(n-1)+fibo(n-2);
            }
        }
        */
        
        /*
        String str=sc.nextLine();
        if(palindrome(str)){
            System.out.print("Palindrome");
        }
        else{
            System.out.print("Not Palindrome");
        }
    	}
    	public static boolean palindrome(String str) {
    	    int m=str.length();
            for(int i=0;i<m/2;i++) {
            if(str.charAt(i)!=str.charAt(m-i-1))
                return false;
            }
            return true;
        }
    */
    
    /*
    int f=sc.nextInt();
	    int l=sc.nextInt();
	    for(int i=f;i<=l;i++){
	        if(arms(i)) {  System.out.println(i+" "); }
	    }
        }
            public static boolean arms(int n){
                int num=n;
                int sum=0;
                int digits=String.valueOf(n).length();
                while(n>0){ 
                    int d=n%10;
                    sum+=Math.pow(d, digits);
                    n=n/10;
                }
                if(num==sum){ return true; }
                else { return false; }
        }
    */